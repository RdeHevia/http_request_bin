{"version":3,"sources":["components/NewBinButton.js","services/newBin.js","components/Home.js","services/fetchBin.js","components/BackHomeButton.js","components/Requests.js","components/Refresh.js","components/RequestNavBar.js","components/BinPage.js","App.js","index.js"],"names":["NewBinButton","createNewBin","className","type","onClick","a","config","method","fetch","response","json","Home","handleGoToBin","binId","handleBinIdChange","handleCreateNewBin","onSubmit","htmlFor","id","placeholder","value","onChange","baseUrl","fetchBin","fetchRequests","console","log","getIfBinExists","BackHomeButton","handleGoToHome","Request","request","path","Date","createdAt","toLocaleString","weekday","year","month","day","hour","minute","protocol","toUpperCase","hostname","ip","Object","keys","headers","map","headerName","_id","cols","JSON","stringify","body","readOnly","Refresh","handleRefresh","RequestNavBar","requests","setCurrentRequestId","dateConfig","BinPage","useState","setRequests","currentRequestId","creationTime","setCreationTime","lastUpdateTime","setLastUpdateTime","endPoint","setEndPoint","useEffect","then","bin","updatedAt","window","location","origin","length","sortedRequests","sort","b","catch","err","event","preventDefault","name","defaultValue","find","App","localStorage","getItem","setBinId","binIdFormInput","setBinIdFormInput","history","useHistory","push","exists","setItem","alert","newBinId","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6db99e6.chunk.js","sourcesContent":["import React from 'react';\n\nconst NewBinButton = ({ createNewBin }) => {\n  return (\n    <div className=\"w-1/4\">\n      <button type=\"submit\" onClick={createNewBin} className=\"border-2 w-full p-5 border-gray-900 hover:border-blue-400 bg-blue-600 rounded-md\">Create new Bin</button>\n    </div>\n  )\n}\n\nexport default NewBinButton;","const baseUrl = '/api'\n\nconst createNewBin = async () => {\n  const config = {\n    method: 'POST'\n  }\n\n  const response = await fetch(baseUrl, config);\n  // console.log(await response.json());\n  return response.json();\n}\n\nexport { createNewBin }","import React from 'react';\nimport NewBinButton from './NewBinButton';\nimport { createNewBin } from '../services/newBin';\nconst Home = ({ handleGoToBin, binId, handleBinIdChange, handleCreateNewBin }) => {\n  \n  return (\n  <main className=\"flex flex-col items-center text-3xl m-36\">\n      <form onSubmit={handleGoToBin} className=\"flex flex-col items-center mb-5 w-1/4\">\n        <label htmlFor=\"bin-input\" className=\"mb-5\">Enter Bin ID</label>\n        <input id=\"bin-input\" type=\"text\" placeholder=\"u6anlg\" value={binId} onChange={handleBinIdChange} className=\" w-full mb-5 p-5 flex rounded-md bg-gray-800 border-2 border-gray-900 text-yellow-600 placeholder-yellow-600 placeholder-opacity-40 text-center\"/>\n        <button type=\"submit\" className=\"border-2 border-gray-900 hover:border-green-300 w-full p-5 bg-green-600 rounded-md\">Go!</button>\n      </form>\n    <p className=\"mb-5\">or</p>\n    <NewBinButton createNewBin={handleCreateNewBin}/>\n  </main>\n  )\n}\n// testing only: u6anlg\n// rename to cHesTTP\nexport default Home;","const baseUrl = '/api'\n\nconst fetchBin = async (binId) => {\n  const response = await fetch(`${baseUrl}/${binId}`);\n  return response.json();\n}\n\nconst fetchRequests = async (binId) => {\n  console.log(binId);\n  const response = await fetch(`${baseUrl}/${binId}/requests`);\n  return response.json();\n}\n\nconst getIfBinExists = async (binId) => {\n  const response = await fetch(`${baseUrl}/${binId}?check_exists=true`);\n  return response.json();\n}\n\nexport {fetchBin, fetchRequests, getIfBinExists}","import React from 'react';\n\nconst BackHomeButton = ({ handleGoToHome }) => {\n  return (\n    <div>\n      <button onClick={handleGoToHome} className=\"border-2 border-gray-900 hover:border-yellow-500 w-full p-5 bg-yellow-500 bg-opacity-80 rounded-md\">Back to Home</button>\n    </div>\n  )\n}\n\nexport default BackHomeButton;","import React from 'react-dom';\nconst Request = ({ request }) => {\n  const dateConfig = {weekday: \"long\", year:\"numeric\", month:\"long\", day:\"numeric\", hour: \"numeric\", minute: \"numeric\"};\n  if (!request) {\n    return <h1 className=\"text-5xl font-bold mb-5\">Requests will appear here</h1>\n  }\n  return (\n    <>\n      <section className=\"m-5\">\n        <h1 className=\"text-5xl font-bold mb-5\">{request.method} {request.path}</h1>\n        <dl>\n          <dt className=\"text-white font-bold\">Received on:</dt>\n          <dd className=\"italic text-lg mb-2\">{new Date(request.createdAt).toLocaleString(\"en-US\", dateConfig)}</dd>\n          <dt className=\"text-white font-bold\">Protocol:</dt>\n          <dd className=\"italic text-lg mb-2\">{request.protocol.toUpperCase()}</dd>\n          <dt className=\"text-white font-bold\">From:</dt>\n          <dd className=\"italic text-lg mb-2\">{request.hostname}</dd>\n          <dt className=\"text-white font-bold\">IP address:</dt>\n          <dd className=\"italic text-lg\">{request.ip || \"N/A\"}</dd>\n        </dl>\n      </section>\n      <section className=\"m-5\">\n        <h2 className=\"text-3xl font-bold mb-5\">HEADERS</h2>\n        <ul>\n        {Object.keys(request.headers).map(headerName => {\n          return <li key={request._id + headerName} className=\"mb-2\"><strong>{headerName}:</strong> <i>{request.headers[headerName]}</i></li>\n        })}\n        </ul>\n      </section>\n      <section className=\"m-5\">\n        <h2>Body</h2>\n        <textarea cols=\"100\" value={JSON.stringify(request.body, null, 3) || \"{\\n\\n}\"} readOnly className=\"p-5 w-full h-screen rounded-md bg-gray-700 border-2 border-gray-900 text-yellow-600\"></textarea>\n      </section>\n    </>\n  )\n}\n\nconst Requests = ( { requests }) => {\n  return (\n    <ul>\n      {requests.map(request => (<Request key={request._id} request={request} />))}\n    </ul>\n  )\n}\n\nexport default Request;","import React from 'react';\n\nconst Refresh = ({ handleRefresh }) => {\n  return (\n    <>\n      <button onClick={handleRefresh} className=\"border-2 border-gray-900 hover:border-green-300 w-full p-5 bg-green-600 rounded-md\">Refresh</button>\n    </>\n  )\n}\n\nexport default Refresh;","import React from 'react-dom';\n\nconst RequestNavBar = ( { requests, setCurrentRequestId }) => {\n  const dateConfig = {year:\"numeric\", month:\"numeric\", day:\"numeric\", hour: \"numeric\", minute: \"numeric\"};\n  return (\n  <ul className=\"border-2 border-gray-900 rounded-md\">\n      {requests.map(request => {\n        return (\n          <li key={request._id} onClick={() => setCurrentRequestId(request._id)} className=\"border-b-2 border-gray-900 hover:text-yellow-500 cursor-pointer bg-gray-700 p-4 flex justify-between\">\n            <p className=\"font-bold\">{request.method}</p>\n            <p>{new Date(request.createdAt).toLocaleString(\"en-US\", dateConfig)}</p></li>\n        )\n      })}\n  </ul>\n  )\n}\n\nexport default RequestNavBar;","import React, { useEffect, useState } from 'react';\nimport { fetchBin, fetchRequests } from '../services/fetchBin';\nimport BackHomeButton from './BackHomeButton';\nimport Request from './Requests';\nimport Requests from './Requests';\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en'\nimport Refresh from './Refresh';\nimport RequestNavBar from './RequestNavBar';\n\nconst BinPage = ({ binId, handleGoToHome }) => {\n  const [requests, setRequests] = useState([]);\n  const [currentRequestId, setCurrentRequestId] = useState(\"\");\n  const [creationTime, setCreationTime] = useState(\"\");\n  const [lastUpdateTime, setLastUpdateTime] = useState(\"\");\n  const [endPoint, setEndPoint] = useState(\"\");\n  useEffect(() => {\n    fetchBin(binId).then(bin => {\n      const dateConfig = {weekday: \"long\", year:\"numeric\", month:\"long\", day:\"numeric\", hour: \"numeric\", minute: \"numeric\"};\n      setCreationTime(new Date(bin.createdAt).toLocaleString(\"en-US\", dateConfig));\n      setLastUpdateTime(new Date(bin.updatedAt).toLocaleString(\"en-US\", dateConfig));\n      setEndPoint(`${window.location.origin}${bin.endPoint}`);\n      if (bin.requests.length > 0) {\n        const sortedRequests = bin.requests.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\n        setRequests(sortedRequests);\n        setCurrentRequestId(sortedRequests[0]._id);\n      }\n    }).then(bin => {\n    }).catch(err => console.log(err));\n  }, []);\n\n  const handleRefresh = async event => {\n    event.preventDefault();\n    const sortedRequests = (await fetchRequests(binId)).sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    setRequests(sortedRequests);\n  }\n\n  return (\n    <div className=\"text-xl m-5\">\n      <section className=\"text-4xl flex flex-col items-center\">\n        <p className=\"mb-5\">Your endpoint:</p> \n        <input type=\"url\" name=\"\" id=\"\" readOnly defaultValue={endPoint} className=\" w-full mb-5 p-5 flex rounded-md bg-gray-800 border-2 border-gray-900 text-yellow-600 placeholder-yellow-600 placeholder-opacity-40 text-center\"/>\n      </section>\n      <div  className=\"flex bg-gray-800\">\n        <nav className=\"flex-none w-96 border-2 p-5 border-gray-900 rounded-tl-md rounded-bl-md\">\n          <BackHomeButton handleGoToHome={handleGoToHome} />\n          <Refresh handleRefresh={handleRefresh}/>\n          <section>\n            <h2 className=\"text-3xl font-bold mb-5 mt-5 pb-2 border-b-2 border-gray-900\">Bin {binId}</h2>\n            <dl className=\"mb-5\">\n              <dt className=\"text-white font-bold\">Created on:</dt>\n              <dd className=\"italic text-lg mb-5\">{creationTime}</dd>\n              <dt className=\"text-white font-bold\">Last request received on:</dt>\n              <dd className=\"italic text-lg\">{lastUpdateTime}</dd>\n            </dl>\n          </section>\n          <RequestNavBar requests={requests} setCurrentRequestId={setCurrentRequestId} />\n        </nav>\n        <main className=\"flex-auto border-t-2 border-b-2 border-r-2 p-5 border-gray-900 rounded-tr-md rounded-br-md\">\n            {/* <Requests requests={requests} /> */}\n            <Request request={requests.find(request => request._id === currentRequestId)} />\n        </main>\n      </div>\n    </div>\n  )\n}\n\nexport default BinPage;","import React, { useEffect, useState } from 'react';\nimport NewBinButton from \"./components/NewBinButton\";\nimport Home from './components/Home'\nimport { createNewBin } from './services/newBin';\nimport { getIfBinExists } from './services/fetchBin';\nimport {\n  BrowserRouter as Router,\n  Switch, Route, useHistory\n} from \"react-router-dom\"\nimport BinPage from './components/BinPage';\nconst App = () => {\n  const [binId, setBinId] = useState(window.localStorage.getItem(\"binId\") || \"\");\n  const [binIdFormInput, setBinIdFormInput] = useState(\"\");\n\n  let history = useHistory();\n  \n  useEffect(() => {\n    if (binId) {\n      history.push(`/bins/${binId}`);\n    } else {\n      history.push(`/`)\n    }\n  }, [binId, history]);\n\n  const handleBinIdChange = event => {\n    setBinIdFormInput(event.target.value);\n  }\n\n  const handleGoToBin = async event => {\n    event.preventDefault();\n    const binExists = (await getIfBinExists(binIdFormInput)).exists;\n\n    if (binExists) {\n      setBinId(binIdFormInput);\n      window.localStorage.setItem(\"binId\",binIdFormInput);\n\n    } else {\n      alert(`Bin ${binIdFormInput} doesn't exists. Please try again or create a new one`);\n      setBinIdFormInput(\"\");\n    }\n  }\n\n  const handleGoToHome = event => {\n    event.preventDefault();\n    setBinIdFormInput(binId);\n    setBinId(\"\");\n    window.localStorage.setItem(\"binId\",\"\");\n  }\n\n  const handleCreateNewBin = async event => {\n    let newBinId = (await createNewBin()).binId;\n  \n    setBinId(newBinId);\n    window.localStorage.setItem(\"binId\",newBinId);\n  }\n\n  return (\n  <body className=\"text-white font-sans\">\n    <header className=\"flex content-center justify-center p-20\"><h1 className=\"text-9xl\">Request Bin</h1></header>\n      <Switch>\n        <Route path={`/bins/${binId}`}>\n          <BinPage binId={binId} handleGoToHome={handleGoToHome}/>\n        </Route>\n        <Route path=\"/\">\n          <Home binId={binIdFormInput} handleBinIdChange={handleBinIdChange} handleGoToBin={handleGoToBin} handleCreateNewBin={handleCreateNewBin} />\n        </Route>\n      </Switch>\n  </body>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport { BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}