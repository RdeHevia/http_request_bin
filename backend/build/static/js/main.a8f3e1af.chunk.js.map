{"version":3,"sources":["components/NewBinButton.js","services/newBin.js","components/Home.js","services/fetchBin.js","components/BackHomeButton.js","components/Request.js","components/BinPage.js","App.js","index.js"],"names":["NewBinButton","createNewBin","type","onClick","a","config","method","fetch","response","json","Home","handleGoToBin","binId","handleBinIdChange","handleCreateNewBin","onSubmit","placeholder","value","onChange","baseUrl","fetchBin","getIfBinExists","BackHomeButton","handleGoToHome","Request","request","path","protocol","toUpperCase","hostname","Date","createdAt","toLocaleString","weekday","year","month","day","hour","minute","ip","Object","keys","headers","map","headerName","_id","name","id","cols","rows","JSON","stringify","body","readOnly","BinPage","useState","requests","setRequests","creationTime","setCreationTime","lastUpdateTime","setLastUpdateTime","useEffect","then","bin","dateConfig","updatedAt","console","log","defaultValue","window","location","App","localStorage","getItem","setBinId","binIdFormInput","setBinIdFormInput","history","useHistory","push","event","preventDefault","exists","setItem","alert","newBinId","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8f3e1af.chunk.js","sourcesContent":["import React from 'react';\n\nconst NewBinButton = ({ createNewBin }) => {\n  return (\n    <div>\n      <button type=\"submit\" onClick={createNewBin}>Create new Bin</button>\n    </div>\n  )\n}\n\nexport default NewBinButton;","const baseUrl = '/api'\n\nconst createNewBin = async () => {\n  const config = {\n    method: 'POST'\n  }\n\n  const response = await fetch(baseUrl, config);\n  // console.log(await response.json());\n  return response.json();\n}\n\nexport { createNewBin }","import React from 'react';\nimport NewBinButton from './NewBinButton';\nimport { createNewBin } from '../services/newBin';\nconst Home = ({ handleGoToBin, binId, handleBinIdChange, handleCreateNewBin }) => {\n  \n  return (\n  <main>\n    <div>\n      <form onSubmit={handleGoToBin}>\n        <label>Enter the Bin Id<input type=\"text\" placeholder=\"u6anlg\" value={binId} onChange={handleBinIdChange}/></label>\n        <button type=\"submit\">Go!</button>\n      </form>\n    </div>\n    <p>or</p>\n    <NewBinButton createNewBin={handleCreateNewBin} />\n  </main>\n  )\n}\n// testing only: u6anlg\nexport default Home;","const baseUrl = '/api'\n\nconst fetchBin = async (binId) => {\n  const response = await fetch(`${baseUrl}/${binId}`);\n  return response.json();\n}\n\nconst fetchRequests = async (binId) => {\n  const response = await fetch(`${baseUrl}/${binId}`);\n  return (await response.json()).requests;\n}\n\nconst getIfBinExists = async (binId) => {\n  const response = await fetch(`${baseUrl}/${binId}?check_exists=true`);\n  return response.json();\n}\n\nexport {fetchBin, fetchRequests, getIfBinExists}","import React from 'react';\n\nconst BackHomeButton = ({ handleGoToHome }) => {\n  return (\n    <div>\n      <button onClick={handleGoToHome}>Back to Home</button>\n    </div>\n  )\n}\n\nexport default BackHomeButton;","import React from 'react';\n\nconst Request = ({ request }) => {\n  const dateConfig = {weekday: \"long\", year:\"numeric\", month:\"long\", day:\"numeric\", hour: \"numeric\", minute: \"numeric\"};\n  return (\n    <li>\n      <section>\n        <h1>{request.method} {request.path}</h1>\n        <ul>\n          <li>{request.protocol.toUpperCase()}</li>\n          <li>{request.hostname}</li>\n          <li>{new Date(request.createdAt).toLocaleString(\"en-US\", dateConfig)}</li>\n          <li>{request.ip}</li>\n        </ul>\n      </section>\n      <section>\n        <h2>Headers</h2>\n        <ul>\n        {Object.keys(request.headers).map(headerName => {\n          return <li key={request._id + headerName}><strong>{headerName}:</strong> {request.headers[headerName]}</li>\n        })}\n        </ul>\n      </section>\n      <section>\n        <h2>Body</h2>\n        <textarea name=\"\" id=\"\" cols=\"100\" rows=\"30\" value={JSON.stringify(request.body, null, 3)} readOnly></textarea>\n    \n      </section>\n    </li>\n  )\n}\n\nexport default Request;","import React, { useEffect, useState } from 'react';\nimport { fetchBin } from '../services/fetchBin';\nimport BackHomeButton from './BackHomeButton';\nimport Request from './Request';\nimport TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en'\n\nconst BinPage = ({ binId, handleGoToHome }) => {\n  const [requests, setRequests] = useState([]);\n  const [creationTime, setCreationTime] = useState(\"\");\n  const [lastUpdateTime, setLastUpdateTime] = useState(\"\");\n  useEffect(() => {\n    fetchBin(binId).then(bin => {\n      const dateConfig = {weekday: \"long\", year:\"numeric\", month:\"long\", day:\"numeric\", hour: \"numeric\", minute: \"numeric\"};\n      setCreationTime(new Date(bin.createdAt).toLocaleString(\"en-US\", dateConfig));\n      setLastUpdateTime(new Date(bin.updatedAt).toLocaleString(\"en-US\", dateConfig));\n      setRequests(bin.requests);\n      console.log(requests);\n    });\n  }, []);\n  return (\n    <main>\n      <BackHomeButton handleGoToHome={handleGoToHome} />\n      <section>\n        <p>Your enpoint:</p> \n        <input type=\"url\" name=\"\" id=\"\" readOnly defaultValue={`${window.location.hostname}/${binId}`}/>\n      </section>\n      <section>\n        <ul>\n          <li>Bin {binId}</li>\n          <li>Bin created on: {creationTime}</li>\n          <li>Last request received on: {lastUpdateTime}</li>\n        </ul>\n      </section>\n      <section>\n\n      </section>\n      <ul>\n        {requests.map(request => (<Request key={request._id} request={request} />))}\n      </ul>\n    </main>\n  )\n}\n\nexport default BinPage;","import React, { useEffect, useState } from 'react';\nimport NewBinButton from \"./components/NewBinButton\";\nimport Home from './components/Home'\nimport { createNewBin } from './services/newBin';\nimport { getIfBinExists } from './services/fetchBin';\nimport {\n  BrowserRouter as Router,\n  Switch, Route, useHistory\n} from \"react-router-dom\"\nimport BinPage from './components/BinPage';\nconst App = () => {\n  const [binId, setBinId] = useState(window.localStorage.getItem(\"binId\") || \"\");\n  const [binIdFormInput, setBinIdFormInput] = useState(\"\");\n\n  let history = useHistory();\n  \n  useEffect(() => {\n    if (binId) {\n      history.push(`/bins/${binId}`);\n    } else {\n      history.push(`/`)\n    }\n  }, [binId, history]);\n\n  const handleBinIdChange = event => {\n    setBinIdFormInput(event.target.value);\n  }\n\n  const handleGoToBin = async event => {\n    event.preventDefault();\n    const binExists = (await getIfBinExists(binIdFormInput)).exists;\n\n    if (binExists) {\n      setBinId(binIdFormInput);\n      window.localStorage.setItem(\"binId\",binIdFormInput);\n\n    } else {\n      alert(`Bin ${binIdFormInput} doesn't exists. Please try again or create a new one`);\n      setBinIdFormInput(\"\");\n    }\n  }\n\n  const handleGoToHome = event => {\n    event.preventDefault();\n    setBinIdFormInput(binId);\n    setBinId(\"\");\n    window.localStorage.setItem(\"binId\",\"\");\n  }\n\n  const handleCreateNewBin = async event => {\n    let newBinId = (await createNewBin()).binId;\n  \n    setBinId(newBinId);\n    window.localStorage.setItem(\"binId\",newBinId);\n  }\n\n  return (\n  <>\n    <header><h1>Request Bin</h1></header>\n      <Switch>\n        <Route path={`/bins/${binId}`}>\n          <BinPage binId={binId} handleGoToHome={handleGoToHome}/>\n        </Route>\n        <Route path=\"/\">\n          <Home binId={binIdFormInput} handleBinIdChange={handleBinIdChange} handleGoToBin={handleGoToBin} handleCreateNewBin={handleCreateNewBin} />\n        </Route>\n      </Switch>\n  </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}