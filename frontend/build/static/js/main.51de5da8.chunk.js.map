{"version":3,"sources":["components/NewBinButton.js","services/newBin.js","components/Home.js","services/fetchBin.js","components/BackHomeButton.js","components/Request.js","components/Refresh.js","components/RequestNavBar.js","components/BinPage.js","App.js","index.js"],"names":["NewBinButton","createNewBin","className","type","onClick","a","config","method","fetch","response","json","Home","handleGoToBin","binId","handleBinIdChange","handleCreateNewBin","onSubmit","htmlFor","id","placeholder","value","onChange","baseUrl","fetchBin","fetchRequests","console","log","getIfBinExists","BackHomeButton","handleGoToHome","Request","request","path","Date","createdAt","toLocaleString","weekday","year","month","day","hour","minute","protocol","toUpperCase","hostname","ip","Object","keys","headers","map","headerName","_id","cols","JSON","stringify","body","readOnly","Refresh","handleRefresh","RequestNavBar","requests","setCurrentRequestId","dateConfig","BinPage","useState","setRequests","currentRequestId","creationTime","setCreationTime","lastUpdateTime","setLastUpdateTime","endPoint","setEndPoint","useEffect","then","bin","updatedAt","window","location","origin","length","sortedRequests","sort","b","catch","err","event","preventDefault","name","defaultValue","find","App","localStorage","getItem","setBinId","binIdFormInput","setBinIdFormInput","history","useHistory","push","exists","setItem","alert","newBinId","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51de5da8.chunk.js","sourcesContent":["import React from \"react\";\n\nconst NewBinButton = ({ createNewBin }) => {\n  return (\n    <div className=\"w-1/4\">\n      <button\n        type=\"submit\"\n        onClick={createNewBin}\n        className=\"border-2 w-full p-5 border-gray-900 hover:border-blue-400 bg-blue-600 rounded-md\"\n      >\n        Create new Chest\n      </button>\n    </div>\n  );\n};\n\nexport default NewBinButton;\n","const baseUrl = '/api'\n\nconst createNewBin = async () => {\n  const config = {\n    method: 'POST'\n  }\n\n  const response = await fetch(baseUrl, config);\n  // console.log(await response.json());\n  return response.json();\n}\n\nexport { createNewBin }","import React from \"react\";\nimport NewBinButton from \"./NewBinButton\";\nimport { createNewBin } from \"../services/newBin\";\nconst Home = ({\n  handleGoToBin,\n  binId,\n  handleBinIdChange,\n  handleCreateNewBin,\n}) => {\n  return (\n    <main className=\"flex flex-col items-center text-3xl m-36\">\n      <form\n        onSubmit={handleGoToBin}\n        className=\"flex flex-col items-center mb-5 w-1/4\"\n      >\n        <label htmlFor=\"bin-input\" className=\"mb-5\">\n          Enter Chest ID\n        </label>\n        <input\n          id=\"bin-input\"\n          type=\"text\"\n          placeholder=\"u6anlg\"\n          value={binId}\n          onChange={handleBinIdChange}\n          className=\" w-full mb-5 p-5 flex rounded-md bg-gray-800 border-2 border-gray-900 text-yellow-600 placeholder-yellow-600 placeholder-opacity-40 text-center\"\n        />\n        <button\n          type=\"submit\"\n          className=\"border-2 border-gray-900 hover:border-green-300 w-full p-5 bg-green-600 rounded-md\"\n        >\n          Go!\n        </button>\n      </form>\n      <p className=\"mb-5\">or</p>\n      <NewBinButton createNewBin={handleCreateNewBin} />\n    </main>\n  );\n};\n// testing only: u6anlg\n// rename to cHesTTP\nexport default Home;\n","const baseUrl = '/api'\n\nconst fetchBin = async (binId) => {\n  const response = await fetch(`${baseUrl}/${binId}`);\n  return response.json();\n}\n\nconst fetchRequests = async (binId) => {\n  console.log(binId);\n  const response = await fetch(`${baseUrl}/${binId}/requests`);\n  return response.json();\n}\n\nconst getIfBinExists = async (binId) => {\n  const response = await fetch(`${baseUrl}/${binId}?check_exists=true`);\n  return response.json();\n}\n\nexport {fetchBin, fetchRequests, getIfBinExists}","import React from 'react';\n\nconst BackHomeButton = ({ handleGoToHome }) => {\n  return (\n    <div>\n      <button onClick={handleGoToHome} className=\"border-2 border-gray-900 hover:border-yellow-500 w-full p-5 bg-yellow-500 bg-opacity-80 rounded-md\">Back to Home</button>\n    </div>\n  )\n}\n\nexport default BackHomeButton;","import React from \"react-dom\";\nconst Request = ({ request }) => {\n  const dateConfig = {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n  };\n  if (!request) {\n    return (\n      <h1 className=\"text-5xl font-bold mb-5\">Requests will appear here</h1>\n    );\n  }\n  return (\n    <>\n      <section className=\"m-5\">\n        <h1 className=\"text-5xl font-bold mb-5\">\n          {request.method} {request.path}\n        </h1>\n        <dl>\n          <dt className=\"text-white font-bold\">Received on:</dt>\n          <dd className=\"italic text-lg mb-2\">\n            {new Date(request.createdAt).toLocaleString(\"en-US\", dateConfig)}\n          </dd>\n          <dt className=\"text-white font-bold\">Protocol:</dt>\n          <dd className=\"italic text-lg mb-2\">\n            {request.protocol.toUpperCase()}\n          </dd>\n          <dt className=\"text-white font-bold\">From:</dt>\n          <dd className=\"italic text-lg mb-2\">{request.hostname}</dd>\n          <dt className=\"text-white font-bold\">IP address:</dt>\n          <dd className=\"italic text-lg\">{request.ip || \"N/A\"}</dd>\n        </dl>\n      </section>\n      <section className=\"m-5\">\n        <h2 className=\"text-3xl font-bold mb-5\">HEADERS</h2>\n        <ul>\n          {Object.keys(request.headers).map((headerName) => {\n            return (\n              <li key={request._id + headerName} className=\"mb-2\">\n                <strong>{headerName}:</strong>{\" \"}\n                <i>{request.headers[headerName]}</i>\n              </li>\n            );\n          })}\n        </ul>\n      </section>\n      <section className=\"m-5\">\n        <h2>Body</h2>\n        <textarea\n          cols=\"100\"\n          value={JSON.stringify(request.body, null, 3) || \"{\\n\\n}\"}\n          readOnly\n          className=\"p-5 w-full h-screen rounded-md bg-gray-700 border-2 border-gray-900 text-yellow-600\"\n        ></textarea>\n      </section>\n    </>\n  );\n};\n\nexport default Request;\n","import React from 'react';\n\nconst Refresh = ({ handleRefresh }) => {\n  return (\n    <>\n      <button onClick={handleRefresh} className=\"border-2 border-gray-900 hover:border-green-300 w-full p-5 bg-green-600 rounded-md\">Refresh</button>\n    </>\n  )\n}\n\nexport default Refresh;","import React from 'react-dom';\n\nconst RequestNavBar = ( { requests, setCurrentRequestId }) => {\n  const dateConfig = {year:\"numeric\", month:\"numeric\", day:\"numeric\", hour: \"numeric\", minute: \"numeric\"};\n  return (\n  <ul className=\"border-2 border-gray-900 rounded-md\">\n      {requests.map(request => {\n        return (\n          <li key={request._id} onClick={() => setCurrentRequestId(request._id)} className=\"border-b-2 border-gray-900 hover:text-yellow-500 cursor-pointer bg-gray-700 p-4 flex justify-between\">\n            <p className=\"font-bold\">{request.method}</p>\n            <p>{new Date(request.createdAt).toLocaleString(\"en-US\", dateConfig)}</p></li>\n        )\n      })}\n  </ul>\n  )\n}\n\nexport default RequestNavBar;","import React, { useEffect, useState } from \"react\";\nimport { fetchBin, fetchRequests } from \"../services/fetchBin\";\nimport BackHomeButton from \"./BackHomeButton\";\nimport Request from \"./Request\";\nimport Refresh from \"./Refresh\";\nimport RequestNavBar from \"./RequestNavBar\";\n\nconst BinPage = ({ binId, handleGoToHome }) => {\n  const [requests, setRequests] = useState([]);\n  const [currentRequestId, setCurrentRequestId] = useState(\"\");\n  const [creationTime, setCreationTime] = useState(\"\");\n  const [lastUpdateTime, setLastUpdateTime] = useState(\"\");\n  const [endPoint, setEndPoint] = useState(\"\");\n  useEffect(() => {\n    fetchBin(binId)\n      .then((bin) => {\n        const dateConfig = {\n          weekday: \"long\",\n          year: \"numeric\",\n          month: \"long\",\n          day: \"numeric\",\n          hour: \"numeric\",\n          minute: \"numeric\",\n        };\n        setCreationTime(\n          new Date(bin.createdAt).toLocaleString(\"en-US\", dateConfig)\n        );\n        setLastUpdateTime(\n          new Date(bin.updatedAt).toLocaleString(\"en-US\", dateConfig)\n        );\n        setEndPoint(`${window.location.origin}${bin.endPoint}`);\n        if (bin.requests.length > 0) {\n          const sortedRequests = bin.requests.sort(\n            (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\n          );\n          setRequests(sortedRequests);\n          setCurrentRequestId(sortedRequests[0]._id);\n        }\n      })\n      .then((bin) => {})\n      .catch((err) => console.log(err));\n  }, []);\n\n  const handleRefresh = async (event) => {\n    event.preventDefault();\n    const sortedRequests = (await fetchRequests(binId)).sort(\n      (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\n    );\n    setRequests(sortedRequests);\n  };\n\n  return (\n    <div className=\"text-xl m-5\">\n      <section className=\"text-4xl flex flex-col items-center\">\n        <p className=\"mb-5\">Your endpoint:</p>\n        <input\n          type=\"url\"\n          name=\"\"\n          id=\"\"\n          readOnly\n          defaultValue={endPoint}\n          className=\" w-full mb-5 p-5 flex rounded-md bg-gray-800 border-2 border-gray-900 text-yellow-600 placeholder-yellow-600 placeholder-opacity-40 text-center\"\n        />\n      </section>\n      <div className=\"flex bg-gray-800\">\n        <nav className=\"flex-none w-96 border-2 p-5 border-gray-900 rounded-tl-md rounded-bl-md\">\n          <BackHomeButton handleGoToHome={handleGoToHome} />\n          <Refresh handleRefresh={handleRefresh} />\n          <section>\n            <h2 className=\"text-3xl font-bold mb-5 mt-5 pb-2 border-b-2 border-gray-900\">\n              Chest {binId}\n            </h2>\n            <dl className=\"mb-5\">\n              <dt className=\"text-white font-bold\">Created on:</dt>\n              <dd className=\"italic text-lg mb-5\">{creationTime}</dd>\n              <dt className=\"text-white font-bold\">\n                Last request received on:\n              </dt>\n              <dd className=\"italic text-lg\">{lastUpdateTime}</dd>\n            </dl>\n          </section>\n          <RequestNavBar\n            requests={requests}\n            setCurrentRequestId={setCurrentRequestId}\n          />\n        </nav>\n        <main className=\"flex-auto border-t-2 border-b-2 border-r-2 p-5 border-gray-900 rounded-tr-md rounded-br-md\">\n          <Request\n            request={requests.find(\n              (request) => request._id === currentRequestId\n            )}\n          />\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default BinPage;\n","import React, { useEffect, useState } from \"react\";\nimport NewBinButton from \"./components/NewBinButton\";\nimport Home from \"./components/Home\";\nimport { createNewBin } from \"./services/newBin\";\nimport { getIfBinExists } from \"./services/fetchBin\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useHistory,\n} from \"react-router-dom\";\nimport BinPage from \"./components/BinPage\";\nconst App = () => {\n  const [binId, setBinId] = useState(\n    window.localStorage.getItem(\"binId\") || \"\"\n  );\n  const [binIdFormInput, setBinIdFormInput] = useState(\"\");\n\n  let history = useHistory();\n\n  useEffect(() => {\n    if (binId) {\n      history.push(`/bins/${binId}`);\n    } else {\n      history.push(`/`);\n    }\n  }, [binId, history]);\n\n  const handleBinIdChange = (event) => {\n    setBinIdFormInput(event.target.value);\n  };\n\n  const handleGoToBin = async (event) => {\n    event.preventDefault();\n    const binExists = (await getIfBinExists(binIdFormInput)).exists;\n\n    if (binExists) {\n      setBinId(binIdFormInput);\n      window.localStorage.setItem(\"binId\", binIdFormInput);\n    } else {\n      alert(\n        `Bin ${binIdFormInput} doesn't exists. Please try again or create a new one`\n      );\n      setBinIdFormInput(\"\");\n    }\n  };\n\n  const handleGoToHome = (event) => {\n    event.preventDefault();\n    setBinIdFormInput(binId);\n    setBinId(\"\");\n    window.localStorage.setItem(\"binId\", \"\");\n  };\n\n  const handleCreateNewBin = async (event) => {\n    let newBinId = (await createNewBin()).binId;\n\n    setBinId(newBinId);\n    window.localStorage.setItem(\"binId\", newBinId);\n  };\n\n  return (\n    <body className=\"text-white font-sans\">\n      <header className=\"flex content-center justify-center p-20\">\n        <h1 className=\"text-9xl\">Request Chest</h1>\n      </header>\n      <Switch>\n        <Route path={`/bins/${binId}`}>\n          <BinPage binId={binId} handleGoToHome={handleGoToHome} />\n        </Route>\n        <Route path=\"/\">\n          <Home\n            binId={binIdFormInput}\n            handleBinIdChange={handleBinIdChange}\n            handleGoToBin={handleGoToBin}\n            handleCreateNewBin={handleCreateNewBin}\n          />\n        </Route>\n      </Switch>\n    </body>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport { BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}